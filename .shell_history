ls
find
create n
;
cd n
 /usr/local/bin/neo4j-shell -path yurl.db 
 START n=node(*) RETURN n;
cd 45
cd -a 45
set type category
set name root
ls
create n;
cd -a 46
set type category
set name technology
create n;
cd -a 47
set type category
set name business
exit
START target=node(*) MATCH target<-[r?:link]-source WHERE r is null RETURN target
;
exit
START target=node(*) MATCH target<-[r?:link]-source WHERE r is null AND target.type != 'property' RETURN target
;
START target=node(*) MATCH target<-[r?:link]-source WHERE r is null AND target.type <> 'property' RETURN target
;
START target=node(*) MATCH target<-[r?:link]-source WHERE r is null AND target.type? <> 'property' RETURN target;
START target=node(*) MATCH target<-[r?:link]-source WHERE r is null AND (target.type is null or target.typetypedafet.type <> 'property') RETURN target;
START target=node(*) MATCH target<-[r?:link]-source WHERE r is null AND (target.type is null or target.type <> 'property') RETURN target
;
START target=node(*) MATCH target<-[r?:link]-source WHERE r is null AND (target.type = null or target.type <> 'property') RETURN target
;
match n where n.name = NULL;
start n=node(*) match n where n.name = NULL;
start n=node(*) match n WHERE n.name = NULL;
start n=node(*) MATCH n WHERE n.name = NULL;
start n=node(*) WHERE n.name = NULL;
start n=node(*);
start n=node(*) return n;
start n=node(*) match n return n;
start n=node(*) where n.type = null return n;
start n=node(*) where n.type = NULL return n;
start n=node(*) where not(has(n.type))  return n;
